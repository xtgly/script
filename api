#!/bin/bash

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
. /etc/env

if [ ! -d "$userdir" ]; then
    mkdir -p $userdir
    chown -R www:www $userdir
fi
if [ ! -d "$logs" ]; then
    mkdir -p $logs
    chown -R www:www $logs
fi

userdir_add() {
    mkdir -p $userdir/$1/public_html
    chown -R www:www $userdir/$1
    return 0
}
userdir_del() {
    rm -rf $userdir/$1
    rm -f $logs/$1.bytes
    rm -f $logs/$1.log
    rm -f $logs/$1.error.log
}
################################################## Apache ##################################################
apache_add() {
    if [ ! -d $install_dir/apache/conf/vhost ]; then
        mkdir $install_dir/apache/conf/vhost
        echo "Include $install_dir/apache/conf/vhost/*.conf" >> $install_dir/apache/conf/httpd.conf
    fi
    if [ -f "$install_dir/apache/conf/vhost/$1.conf" ] || [ -f "$install_dir/apache/conf/vhost/$1.conf.bak" ]; then
        return 1
    else
        cat >> $install_dir/apache/conf/vhost/$1.conf<<EOF
<VirtualHost *:80>
    ServerName $1 www.$1 
    ServerAlias www.$1.$hostname 
#   ServerAdmin $3
    DocumentRoot "$userdir/$1/public_html"
    CustomLog $logs/$1.apache.bytes bytes
    CustomLog $logs/$1.apache.log combined
    ErrorLog $logs/$1.apache.error.log
    <Directory "$userdir/$1">
        CheckSpelling on
        allow from all
        Options +Indexes
        AllowOverride All
        php_admin_flag engine ON
#       php_admin_value sendmail_path '/usr/sbin/sendmail -t -i -f $3'
        php_admin_value open_basedir $userdir/$1:/tmp
    </Directory>
</VirtualHost>
EOF
        return 0
    fi
}
apache_pau() {
    if [ -f "$install_dir/apache/conf/vhost/$1.conf.bak" ]; then
        return 1
    else
        mv $install_dir/apache/conf/vhost/$1.conf $install_dir/apache/conf/vhost/$1.conf.bak
        return 0
    fi
}
apache_rev() {
    if [ -f "$install_dir/apache/conf/vhost/$1.conf" ]; then
        return 1
    else
        mv $install_dir/apache/conf/vhost/$1.conf.bak $install_dir/apache/conf/vhost/$1.conf
        return 0
    fi
}
apache_alias_add() {
    if [ -f "$install_dir/apache/conf/vhost/$1.conf" ]; then
        if ( ! cat $install_dir/apache/conf/vhost/$1.conf | grep ServerAlias | grep " $2 " ); then
            sed -i "s/.*ServerAlias.*/& $2 /" $install_dir/apache/conf/vhost/$1.conf
        fi
        return 0
    elif [ -f "$install_dir/apache/conf/vhost/$1.conf.bak" ]; then
        if ( ! cat $install_dir/apache/conf/vhost/$1.conf.bak | grep ServerAlias | grep " $2 " ); then
            sed -i "s/.*ServerAlias.*/& $2 /" $install_dir/apache/conf/vhost/$1.conf.bak
        fi
        return 0
    else
        return 1
    fi
}
apache_alias_del() {
    if [ -f "$install_dir/apache/conf/vhost/$1.conf" ]; then
        sed -i "/ServerAlias/ s/ $2 //g" $install_dir/apache/conf/vhost/$1.conf
        return 0
    elif [ -f "$install_dir/apache/conf/vhost/$1.conf.bak" ]; then
        sed -i "/ServerAlias/ s/ $2 //g" $install_dir/apache/conf/vhost/$1.conf.bak
        return 0
    else
        return 1
    fi
}
apache_email() {
    if [ -f "$install_dir/apache/conf/vhost/$1.conf" ]; then
        sed -i 's/ServerAdmin .*/ServerAdmin '$2'/g' $install_dir/apache/conf/vhost/$1.conf
        sed -i 's/sendmail -t -i -f .*/sendmail -t -i -f '$2'\x27/g' $install_dir/apache/conf/vhost/$1.conf
        return 0
    elif [ -f "$install_dir/apache/conf/vhost/$1.conf.bak" ]; then
        sed -i 's/ServerAdmin .*/ServerAdmin '$2'/g' $install_dir/apache/conf/vhost/$1.conf.bak
        sed -i 's/sendmail -t -i -f .*/sendmail -t -i -f '$2'\x27/g' $install_dir/apache/conf/vhost/$1.conf.bak
        return 0
    else
        return 1
    fi
}
apache_ip_chg() {
    if [ -f "$install_dir/apache/conf/vhost/$1.conf" ]; then
#       sed -i '1s/.*/<VirtualHost '$2':80>/' $install_dir/apache/conf/vhost/$1.conf
        return 0
    elif [ -f "$install_dir/apache/conf/vhost/$1.conf.bak" ]; then
#       sed -i '1s/.*/<VirtualHost '$2':80>/' $install_dir/apache/conf/vhost/$1.conf.bak
        return 0
    else
        return 1
    fi
}
apache_del() {
    rm -f $install_dir/apache/conf/vhost/$1.conf
    rm -f $install_dir/apache/conf/vhost/$1.conf.bak
    return 0
}
################################################## Nginx ##################################################
nginx_add() {
    if [ ! -d $install_dir/nginx/conf/vhost ]; then
        mkdir $install_dir/nginx/conf/vhost
        sed -i '$i\    include '$install_dir'/nginx/conf/vhost/*.conf;' $install_dir/nginx/conf/nginx.conf
    fi
    if [ -f "$install_dir/nginx/conf/vhost/$1.conf" ] || [ -f "$install_dir/nginx/conf/vhost/$1.conf.bak" ]; then
        return 1
    else
        cat >> $install_dir/nginx/conf/vhost/$1.conf<<EOF
    server {
        listen 80;
        server_name $1.$hostname ;
        access_log $logs/$1.log access;
        error_log $logs/$1.error.log
        index index.htm index.html index.php index.jsp index.asp;
        root $userdir/$1/public_html;
        location ~ .*\.(php|php5)?$ {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
            include fastcgi_params;
        }
        location ~ .*.jsp$ {
            index index.jsp;
            proxy_pass http://127.0.0.1:8080
        }
    }
EOF
        return 0
    fi
}
nginx_pau() {
    if [ -f "$install_dir/nginx/conf/vhost/$1.conf.bak" ]; then
        return 1
    else
        mv $install_dir/nginx/conf/vhost/$1.conf $install_dir/nginx/conf/vhost/$1.conf.bak
        return 0
    fi
}
nginx_rev() {
    if [ -f "$install_dir/nginx/conf/vhost/$1.conf" ]; then
        return 1
    else
        mv $install_dir/nginx/conf/vhost/$1.conf.bak $install_dir/nginx/conf/vhost/$1.conf
        return 0
    fi
}
nginx_alias_add() {
    if [ -f "$install_dir/nginx/conf/vhost/$1.conf" ]; then
        if ( ! cat $install_dir/nginx/conf/vhost/$1.conf | grep server_name | grep " $2 " ); then
            sed -i "s/server_name/& $2 /" $install_dir/nginx/conf/vhost/$1.conf
        fi
        return 0
    elif [ -f "$install_dir/nginx/conf/vhost/$1.conf.bak" ]; then
        if ( ! cat $install_dir/nginx/conf/vhost/$1.conf.bak | grep server_name | grep " $2 " ); then
            sed -i "s/server_name/& $2 /" $install_dir/nginx/conf/vhost/$1.conf.bak
        fi
        return 0
    else
        return 1
    fi
}
nginx_alias_del() {
    if [ -f "$install_dir/nginx/conf/vhost/$1.conf" ]; then
        sed -i "/server_name/ s/ $2 //g" $install_dir/nginx/conf/vhost/$1.conf
        return 0
    elif [ -f "$install_dir/nginx/conf/vhost/$1.conf.bak" ]; then
        sed -i "/server_name/ s/ $2 //g" $install_dir/nginx/conf/vhost/$1.conf.bak
        return 0
    else
        return 1
    fi
}
nginx_ip_chg() {
    if [ -f "$install_dir/nginx/conf/vhost/$1.conf" ]; then
        sed -i "s/        listen .*/        listen $2:80;/g" $install_dir/nginx/conf/vhost/$1.conf
        return 0
    elif [ -f "$install_dir/nginx/conf/vhost/$1.conf.bak" ]; then
        sed -i "s/        listen .*/        listen $2:80;/g" $install_dir/nginx/conf/vhost/$1.conf.bak
        return 0
    else
        return 1
    fi
}
nginx_del() {
    rm -f $install_dir/nginx/conf/vhost/$1.conf
    rm -f $install_dir/nginx/conf/vhost/$1.conf.bak
    return 0
}
################################################## Tomcat ##################################################
tomcat_add() {
    if ( cat $install_dir/tomcat/conf/server.xml | grep '<!--Begin '$1'-->' ); then 
        return 1
    else
        sed -i '/<\/Engine>/ i <!--Begin '$1'-->' $install_dir/tomcat/conf/server.xml
        sed -i '/<\/Engine>/ i <Host name="'$1'.'$domain'" appBase="" unpackWARs="true" autoDeploy="true" xmlValidation="false" xmlNamespaceAware="false">' $install_dir/tomcat/conf/server.xml
        sed -i '/<\/Engine>/ i <Context path="" docBase="'$userdir'/'$1'/public_html" reloadable="true" deubg="0" />' $install_dir/tomcat/conf/server.xml
        sed -i '/<\/Engine>/ i </Host>' $install_dir/tomcat/conf/server.xml
        sed -i '/<\/Engine>/ i <!--'$1' End-->' $install_dir/tomcat/conf/server.xml
        return 0
    fi
}
tomcat_pau() {
    if ( cat $install_dir/tomcat/conf/server.xml | grep '<!--Begin '$1'-->' ); then
        sed -i 's/<!--Begin '$1'-->/<!--Begin '$1'-/g' $install_dir/tomcat/conf/server.xml
        sed -i 's/<!--'$1' End-->/-'$1' End-->/g' $install_dir/tomcat/conf/server.xml
        return 0
    else
        return 1
    fi
}
tomcat_rev() {
    if ( ! cat $install_dir/tomcat/conf/server.xml | grep '<!--Begin '$1'-->' ); then
        sed -i 's/<!--Begin '$1'-/<!--Begin '$1'-->/g' $install_dir/tomcat/conf/server.xml
        sed -i 's/-'$1' End-->/<!--'$1' End-->/g' $install_dir/tomcat/conf/server.xml
        return 0
    else
        return 1
    fi
}
tomcat_alias_add() {
    if ( ! cat $install_dir/tomcat/conf/server.xml | grep '<Alias>'$2'</Alias>' ); then
        sed -ri ':1;N;/-'$1' End-->/!b1;s/(.*)(\n[^\n]+\n[^\n]+)/\1\n<Alias>'$2'<\/Alias>\2/' $install_dir/tomcat/conf/server.xml
        return 0
    else
        return 1
    fi
}
tomcat_alias_del() {
    if ( cat $install_dir/tomcat/conf/server.xml | grep '<Alias>'$2'</Alias>' ); then
        sed -i '/<Alias>'$2'<\/Alias>/d' $install_dir/tomcat/conf/server.xml
        return 0
    else
        return 1
    fi
}
tomcat_del() {
    sed -i '/<!--Begin '$1'-->/,/<!--'$1' End-->/d' $install_dir/tomcat/conf/server.xml
    return 0
}
################################################## Squid ##################################################
squid_add() {
    if ( cat $install_dir/squid/etc/site.conf | grep " $4 " ); then 
        return 1
    else
        cat >> $install_dir/squid/etc/site.conf <<EOF
cache_peer $2 parent $3 3130 no-query originserver no-digest name=$1
cache_peer_domain $1 $4 
cache_peer_access $1 allow all
EOF
        return 0
    fi
}
tomcat_pau() {
    if ( cat $install_dir/tomcat/conf/server.xml | grep '<!--Begin '$1'-->' ); then
        sed -i 's/<!--Begin '$1'-->/<!--Begin '$1'-/g' $install_dir/tomcat/conf/server.xml
        sed -i 's/<!--'$1' End-->/-'$1' End-->/g' $install_dir/tomcat/conf/server.xml
        return 0
    else
        return 1
    fi
}
tomcat_rev() {
    if ( ! cat $install_dir/tomcat/conf/server.xml | grep '<!--Begin '$1'-->' ); then
        sed -i 's/<!--Begin '$1'-/<!--Begin '$1'-->/g' $install_dir/tomcat/conf/server.xml
        sed -i 's/-'$1' End-->/<!--'$1' End-->/g' $install_dir/tomcat/conf/server.xml
        return 0
    else
        return 1
    fi
}
tomcat_alias_add() {
    if ( ! cat $install_dir/tomcat/conf/server.xml | grep '<Alias>'$2'</Alias>' ); then
        sed -ri ':1;N;/-'$1' End-->/!b1;s/(.*)(\n[^\n]+\n[^\n]+)/\1\n<Alias>'$2'<\/Alias>\2/' $install_dir/tomcat/conf/server.xml
        return 0
    else
        return 1
    fi
}
tomcat_alias_del() {
    if ( cat $install_dir/tomcat/conf/server.xml | grep '<Alias>'$2'</Alias>' ); then
        sed -i '/<Alias>'$2'<\/Alias>/d' $install_dir/tomcat/conf/server.xml
        return 0
    else
        return 1
    fi
}
tomcat_del() {
    sed -i '/<!--Begin '$1'-->/,/<!--'$1' End-->/d' $install_dir/tomcat/conf/server.xml
    return 0
}
http_domain() {
    sed -i 's/hostname=.*/hostname='$1'/g' /etc/env
    return 0
}
################################################## Pureftp ##################################################
ftp_add() {
    if ( $install_dir/mysql/bin/mysql -u$ftpdbusername -p$ftpdbpasswd $ftpdb -e "select User from ftpd where user ='$1'" | grep -i $1 ); then
        return 1
    else
        $install_dir/mysql/bin/mysql -u$ftpdbusername -p$ftpdbpasswd << EOF
use $ftpdb;
INSERT INTO ftpd (User,Password,Dir,QuotaSize,status) VALUES ('$1',MD5('$2'),'$userdir/$1','$4','1');
EOF
        return 0
    fi
}
ftp_del() {
    $install_dir/mysql/bin/mysql -u$ftpdbusername -p$ftpdbpasswd << EOF
use $ftpdb;
DELETE FROM ftpd WHERE User='$1';
EOF
    return 0
}
ftp_pwd() {
    $install_dir/mysql/bin/mysql -u$ftpdbusername -p$ftpdbpasswd << EOF
use $ftpdb;
UPDATE ftpd SET Password=MD5('$2') WHERE User='$1'
EOF
    return 0
}
ftp_size() {
    $install_dir/mysql/bin/mysql -u$ftpdbusername -p$ftpdbpasswd << EOF
use $ftpdb;
UPDATE ftpd SET QuotaSize='$2' WHERE User='$1'
EOF
    return 0
}
ftp_status() {
    $install_dir/mysql/bin/mysql -u$ftpdbusername -p$ftpdbpasswd << EOF
use $ftpdb;
UPDATE ftpd SET status='$2' WHERE User='$1'
EOF
    return 0
}
################################################## MySQL ##################################################
mysql_add() {
    if [ -f "$install_dir/mysql/var/$1" ]; then
        return 1
    else
        $install_dir/mysql/bin/mysql -uroot -p$mysqlrootpwd << EOF
create database $1;
CREATE USER $1@localhost IDENTIFIED BY '$2';
grant all privileges on $1.* to $1@localhost;
flush privileges;
EOF
        return 0
    fi
}
mysql_del() {
    $install_dir/mysql/bin/mysql -uroot -p$mysqlrootpwd << EOF
REVOKE ALL PRIVILEGES ON $1.* FROM  $1@localhost;
drop user $1@localhost;
drop database $1;
flush privileges;
EOF
    return 0
}
mysql_grant_pau() {
    $install_dir/mysql/bin/mysql -uroot -p$mysqlrootpwd << EOF
REVOKE all privileges ON $1.* from $1@localhost;
EOF
    return 0
}
mysql_grant_rev() {
    $install_dir/mysql/bin/mysql -uroot -p$mysqlrootpwd << EOF
grant all privileges on $1.* to $1@localhost;
EOF
    return 0
}
mysql_pwd() {
    $install_dir/mysql/bin/mysql -uroot -p$mysqlrootpwd << EOF
update mysql.user set password=password('$2') where User="$1";
flush privileges;
EOF
    return 0
}
mysql_root() {
    $install_dir/mysql/bin/mysqladmin -uroot -p$1 password $2
    sed -i 's/mysqlrootpwd=.*/mysqlrootpwd='$2'/g' /etc/env
    return 0
}
################################################## IP ##################################################
ip_add() {
    EXIST=0
    if ( /sbin/ifconfig | grep $1 ); then
        DEVS=`/sbin/ifconfig -a | grep "Link encap" | awk '{print $1}' |grep -v lp0|grep -v lo|grep -v tun0|grep -v ppp0|grep -v faith0|grep -v sit0`
        for i in $DEVS; do
            IP=`/sbin/ifconfig $i | grep 'inet addr:' | cut -d: -f2 | cut -d\  -f1`;
            if [ "$1" == "$IP" ];then
                EXIST=1
                break
            fi
        done
    fi

    if [ "$EXIST" == "0" ]; then
        cat > /etc/sysconfig/network-scripts/ifcfg-$eth:$ipcount <<EOF
DEVICE=$eth:$ipcount
BOOTPROTO=static
IPADDR=$1
NETMASK=$2
ONBOOT="yes"
EOF
        ifup $eth:$ipcount
        num=`expr $ipcount + 1`
        sed -i 's/ipcount='$ipcount'/ipcount='$num'/g' /etc/env
        cat >> $install_dir/apache/conf/ips.conf<<EOF
#----------Begin $1----------#
<VirtualHost *:80>
ServerName $1
<Location />
Order Allow,Deny
Deny from all
</Location>
</VirtualHost>
#----------End $1----------#
EOF
        return 0
    else
        return 1
    fi
}
ip_del() {
    eth_dev=`ifconfig | sed -n '/'$1' /{g;1!p;};h' | awk '{print $1}'`
    ifdown $eth_dev
    rm -f /etc/sysconfig/network-scripts/ifcfg-$eth_dev
    sed -i '/Begin '$1'-/,/End '$1'-/d' $install_dir/apache/conf/ips.conf
    return 0
}
################################################## SSH ##################################################
sshd_start() {
    /etc/init.d/sshd start
    return 0
}
sshd_stop() {
#   /etc/init.d/sshd stop
    return 1
}
sshd_restart() {
    /etc/init.d/sshd restart
    return 0
}
################################################## Apache ##################################################
apache_start() {
    if ( ! ps axu | grep httpd | grep www ); then
        /etc/init.d/apache start
    fi
    return 0
}
apache_stop() {
    if ( ps axu | grep httpd | grep www); then
        /etc/init.d/apache stop
    fi
    return 0
}
apache_restart() {
    /etc/init.d/apache restart
    return 0
}
################################################## MySQL ##################################################
mysqld_start() {
    /etc/init.d/mysqld start
    return 0
}
mysqld_stop() {
#   /etc/init.d/mysqld stop
    return 1
}
mysqld_restart() {
    /etc/init.d/mysqld restart
    return 0
}
################################################## FTP ##################################################
ftpd_start() {
    /etc/init.d/pureftpd start
    return 0
}
ftpd_stop() {
    /etc/init.d/pureftpd stop
    killall pure-ftpd
    return 0
}
ftpd_restart() {
    /etc/init.d/pureftpd restart
    return 0
}
################################################## SYSTEM ##################################################
system_reboot() {
    reboot
    return 0
}
################################################## FILE ##################################################
pack() {
    if [ ! -f $userdir/$1/public_html$2 ]; then
        cd $userdir/$1/public_html$3
        zip -q -r $userdir/$1/public_html$2 *
        chown www:www $userdir/$1/public_html$2
        return 0
    else
        return 1    
    fi
}
unpack() {
    if [ -f $userdir/$1/public_html$2 ]; then
        if [ ! -d $userdir/$1/public_html$3 ]; then
            mkdir -p $userdir/$1/public_html$3
        fi
        cdir=`echo $a | awk -F '/' '{print $2}'`
        if [ -n $cdir ]; then
           chown -R www:www $userdir/$1/public_html/$cdir
        fi 
        suffix=`echo ${2##*.}`
        if [ $suffix == gz ]; then
            tar zxvf $userdir/$1/public_html$2 -C $userdir/$1/public_html$3
            chown -R www:www $userdir/$1/public_html$3
            return 0
        elif [ $suffix == tar ]; then
            tar xvf $userdir/$1/public_html$2 -C $userdir/$1/public_html$3
            chown -R www:www $userdir/$1/public_html$3
            return 0
        elif [ $suffix == bz2 ]; then
            tar jxvf $userdir/$1/public_html$2 -C $userdir/$1/public_html$3
            chown -R www:www $userdir/$1/public_html$3
           return 0
        elif [ $suffix == zip ]; then
            unzip -o $userdir/$1/public_html$2 -d $userdir/$1/public_html$3
            chown -R www:www $userdir/$1/public_html$3
            return 0
        elif [ $suffix == rar ]; then
            unrar x -o+ -y $userdir/$1/public_html$2 -d $userdir/$1/public_html$3
            chown -R www:www $userdir/$1/public_html$3
            return 0
        else
            return 1
        fi
    else
        return 1
    fi
}
deldir() {
    rm -rf $userdir/$1/public_html$2
    return 0
}
backup() {
    if [ ! -d "$userdir/$1/db" ]; then
        mkdir -p $userdir/$1/db
        chown www:www $userdir/$1/db
    fi
    $install_dir/mysql/bin/mysqldump -uroot -p$mysqlrootpwd $1 > $userdir/$1/db/bak.sql
    chown www:www $userdir/$1/db/bak.sql
    cd $userdir/$1
    tar czvf bak.tar.gz public_html db
    chown www:www bak.tar.gz
    return 0
}
recovery() {
    if [ -f "$userdir/$1/bak.tar.gz" ]; then
        cd $userdir/$1
        tar zxvf bak.tar.gz 
        chown -R www:www *
        $install_dir/mysql/bin/mysql -uroot -p$mysqlrootpwd $1 < $userdir/$1/db/bak.sql
        return 0
    else
        return 1
    fi
}
ftpback() {
    if [ ! -d "$userdir/$1/db" ]; then
        mkdir -p $userdir/$1/db
        chown www:www $userdir/$1/db
    fi
    $install_dir/mysql/bin/mysqldump -uroot -p$mysqlrootpwd $1 > $userdir/$1/db/bak.sql
    chown www:www $userdir/$1/db/bak.sql
    cd $userdir/$1
    tar czvf bak.tar.gz public_html db
    chown www:www bak.tar.gz
    ftp -nv > /tmp/ftp.txt <<!
open $2
user $3 $4
binary
put bak.tar.gz
close
bye
!
    if ( cat /tmp/ftp.txt | grep "226-" | grep "OK" ); then
        return 0
    else
        return 1
    fi
}
################################################## Cron ##################################################
cron_back_add() {
    echo "$1 $2 $3 $4 $5 /bin/api backup $6 " >> /var/spool/cron/root
    return 0
}
cron_back_del() {
    sed -i '/api backup '$1' /d' /var/spool/cron/root
    return 0
}
cron_ftp_add() {
    echo "$1 $2 $3 $4 $5 /bin/api ftpback $6 $7 $8 $9" >> /var/spool/cron/root
    return 0
}
cron_ftp_del() {
    sed -i '/api ftpback '$1' /d' /var/spool/cron/root
    return 0
}
################################################## Iptables ##################################################
fr_up_w_add() {
   iptables -I INPUT -s $1 -j ACCEPT
   return 0
}
fr_down_w_add() {
   iptables -A INPUT -s $1 -j ACCEPT
   return 0
}
fr_up_b_add() {
   iptables -I INPUT -s $1 -j DROP
   return 0
}
fr_down_b_add() {
   iptables -A INPUT -s $1 -j DROP
   return 0
}
fr_w_del() {
   iptables -D INPUT -s $1 -j ACCEPT
   return 0
}
fr_b_del() {
   iptables -D INPUT -s $1 -j DROP
   return 0
}
################################################## Choose ##################################################
case $1 in
    http_add)
        if [ ! -d $userdir/$2 ]; then
            userdir_add $2
        fi
        if [ -d $install_dir/apache ]; then
            apache_add $2 $3 $4
            echo $?
            $install_dir/apache/bin/apachectl -k graceful
        fi
        if [ -d $install_dir/tomcat ]; then
            tomcat_add $2
            echo $?
            $install_dir/tomcat/bin/catalina.sh stop
            killall java
            $install_dir/tomcat/bin/catalina.sh start
        fi
        if [ -d $install_dir/nginx ]; then
            nginx_add $2
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
        if [ -d $install_dir/squid ]; then
            squid_add $2
            echo $?
            $install_dir/squid/sbin/squid -k reconfigure
        fi
        if [ -d $install_dir/varnish ]; then
            varnish_add $2
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
    ;;
    http_pau)
        if [ -d $install_dir/apache ]; then
            apache_pau $2
            echo $?
            $install_dir/apache/bin/apachectl -k graceful
        fi
        if [ -d $install_dir/tomcat ]; then
            tomcat_pau $2
            echo $?
            $install_dir/tomcat/bin/catalina.sh stop
            killall java
            $install_dir/tomcat/bin/catalina.sh start
        fi
        if [ -d $install_dir/nginx ]; then
            nginx_pau $2
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
        if [ -d $install_dir/squid ]; then
            squid_pau $2
            echo $?
            $install_dir/squid/sbin/squid -k reconfigure
        fi
        if [ -d $install_dir/varnish ]; then
            varnish_pau $2
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
    ;;
    http_rev)
        if [ -d $install_dir/apache ]; then
            apache_rev $2
            echo $?
            $install_dir/apache/bin/apachectl -k graceful
        fi
        if [ -d $install_dir/tomcat ]; then
            tomcat_rev $2
            echo $?
            $install_dir/tomcat/bin/catalina.sh stop
            killall java
            $install_dir/tomcat/bin/catalina.sh start
        fi
        if [ -d $install_dir/nginx ]; then
            nginx_rev $2
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
        if [ -d $install_dir/squid ]; then
            squid_rev $2
            echo $?
            $install_dir/squid/sbin/squid -k reconfigure
        fi
        if [ -d $install_dir/varnish ]; then
            varnish_rev $2
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
    ;;
    http_alias_add)
        if [ -d $install_dir/apache ]; then
            apache_alias_add $2 $3
            echo $?
            $install_dir/apache/bin/apachectl -k graceful
        fi
        if [ -d $install_dir/tomcat ]; then
            tomcat_alias_add $2 $3
            echo $?
            $install_dir/tomcat/bin/catalina.sh stop
            killall java
            $install_dir/tomcat/bin/catalina.sh start
        fi
        if [ -d $install_dir/nginx ]; then
            nginx_alias_add $2 $3
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
        if [ -d $install_dir/squid ]; then
            squid_alias_add $2 $3
            echo $?
            $install_dir/squid/sbin/squid -k reconfigure
        fi
        if [ -d $install_dir/varnish ]; then
            varnish_alias_add $2 $3
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
    ;;
    http_alias_del)
        if [ -d $install_dir/apache ]; then
            apache_alias_del $2 $3
            echo $?
            $install_dir/apache/bin/apachectl -k graceful
        fi
        if [ -d $install_dir/tomcat ]; then
            tomcat_alias_del $2 $3
            echo $?
            $install_dir/tomcat/bin/catalina.sh stop
            killall java
            $install_dir/tomcat/bin/catalina.sh start
        fi
        if [ -d $install_dir/nginx ]; then
            nginx_alias_del $2 $3
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
        if [ -d $install_dir/squid ]; then
            squid_alias_del $2 $3
            echo $?
            $install_dir/squid/sbin/squid -k reconfigure
        fi
        if [ -d $install_dir/varnish ]; then
            varnish_alias_del $2 $3
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
    ;;
    http_email)
        apache_email $2 $3
        echo $?
        $install_dir/apache/bin/apachectl -k graceful
    ;;
    http_ip_chg)
        if [ -d $install_dir/apache ]; then
            apache_ip_chg $2 $3
            echo $?
            $install_dir/apache/bin/apachectl -k graceful
        fi
        if [ -d $install_dir/tomcat ]; then
            echo $?
        fi
        if [ -d $install_dir/nginx ]; then
            nginx_ip_chg $2 $3
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
        if [ -d $install_dir/squid ]; then
            squid_ip_chg $2 $3
            echo $?
            $install_dir/squid/sbin/squid -k reconfigure
        fi
        if [ -d $install_dir/varnish ]; then
            varnish_ip_chg $2 $3
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
    ;;
    http_domain)
        http_domain $2
        echo $?
    ;;
    http_del)
        if [ -d $userdir/$2 ]; then
            userdir_del $2
        fi
        if [ -d $install_dir/apache ]; then
            apache_del $2
            echo $?
            $install_dir/apache/bin/apachectl -k graceful
        fi
        if [ -d $install_dir/tomcat ]; then
            tomcat_del $2
            echo $?
            $install_dir/tomcat/bin/catalina.sh stop
            killall java
            $install_dir/tomcat/bin/catalina.sh start
        fi
        if [ -d $install_dir/nginx ]; then
            nginx_del $2
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
        if [ -d $install_dir/squid ]; then
            squid_del $2
            echo $?
            $install_dir/squid/sbin/squid -k reconfigure
        fi
        if [ -d $install_dir/varnish ]; then
            varnish_del $2
            echo $?
            $install_dir/nginx/sbin/nginx -s reload
        fi
    ;;

    ftp_add)
        ftp_add $2 $3 $4
        echo $?
    ;;
    ftp_del)
        ftp_del $2
        echo $?
    ;;
    ftp_pwd)
        ftp_pwd $2 $3
        echo $?
    ;;
    ftp_size)
        ftp_size $2 $3
        echo $?
    ;;
    ftp_status)
        ftp_status $2 $3
        echo $?
    ;;
    mysql_add)
        mysql_add $2 $3
        echo $?
    ;;
    mysql_del)
        mysql_del $2
        echo $?
    ;;
    mysql_grant_pau)
        mysql_grant_pau $2
        echo $?
    ;;
    mysql_grant_rev)
        mysql_grant_rev $2
        echo $?
    ;;
    mysql_pwd)
        mysql_pwd $2 $3
        echo $?
    ;;
    mysql_root)
        mysql_root $2 $3
        echo $?
    ;;
    ip_add)
        ip_add $2 $3
        echo $?
        $install_dir/apache/bin/apachectl -k graceful
    ;;
    ip_del)
        ip_del $2
        echo $?
        $install_dir/apache/bin/apachectl -k graceful
    ;;
    sshd_start)
        sshd_start
        echo $?
    ;;
    sshd_stop)
        sshd_stop
        echo $?
    ;;
    sshd_restart)
        sshd_restart
        echo $?
    ;;
    apache_start)
        apache_start
        echo $?
    ;;
    apache_stop)
        apache_stop
        echo $?
    ;;
    apache_restart)
        apache_restart
        echo $?
    ;;
    mysqld_start)
        mysqld_start
        echo $?
    ;;
    mysqld_stop)
        mysqld_stop
        echo $?
    ;;
    mysqld_restart)
        mysqld_restart
        echo $?
    ;;
    ftpd_start)
        ftpd_start
        echo $?
    ;;
    ftpd_stop)
        ftpd_stop
        echo $?
    ;;
    ftpd_restart)
        ftpd_restart
        echo $?
    ;;
    system_reboot)
        system_reboot
        echo $?
    ;;
    pack)
        pack $2 $3 $4
        echo $?
    ;;
    unpack)
        unpack $2 $3 $4
        echo $?
    ;;
    deldir)
        deldir $2 $3
        echo $?
    ;;
    backup)
        backup $2
        echo $?
    ;;
    recovery)
        recovery $2
        echo $?
    ;;
    ftpback)
        ftpback $2 $3 $4 $5
        echo $?
    ;;
    cron_back_add)
        cron_back_add "$2" "$3" "$4" "$5" "$6" "$7"
    ;;
    cron_back_del)
        cron_back_del $2 
    ;;
    cron_ftp_add)
        cron_ftp_add "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9" "${10}"
    ;;
    cron_ftp_del)
        cron_ftp_del $2
    ;;
    fr_down_w_add)
        fr_down_w_add $2
    ;;
    fr_up_w_add)
        fr_up_w_add $2
    ;;
    fr_down_b_add)
        fr_down_b_add $2
    ;;
    fr_up_b_add)
        fr_up_b_add $2
    ;;
    fr_w_del)
        fr_w_del $2
    ;;
    fr_b_del)
        fr_b_del $2
    ;;
    *)
        echo "Error"
    ;;
esac